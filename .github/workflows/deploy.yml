# .github/workflows/deploy.yml - OPTIMISATION FINALE (√©limine 32 KiB)
name: Deploy Final Optimization

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  final-optimization:
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Fix permissions
        run: chmod +x deploy.js

      - name: Generate deployment
        run: npm run deploy

      # ‚úÖ OPTIMISATION FINALE - √âlimine les 32 KiB restants
      - name: Create FINAL optimized htaccess
        run: |
          echo "üéØ Cr√©ation .htaccess FINAL pour √©liminer les 32 KiB restants..."
          
          cat > dist/.htaccess << 'FINAL_HTACCESS'
          # htaccess OPTIMISE FINAL - Elimine les 32 KiB restants Lighthouse
          # Passe tous les assets de 1h vers 1 an de cache
          
          <IfModule mod_rewrite.c>
              RewriteEngine On
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteRule . /index.html [L]
          </IfModule>
          
          <IfModule mod_expires.c>
              ExpiresActive On
          
              # POLICES - Cache 1 an (elimine main.woff2)
              ExpiresByType font/woff2 "access plus 1 year"
              ExpiresByType font/woff "access plus 1 year"
              ExpiresByType application/font-woff2 "access plus 1 year"
              ExpiresByType application/font-woff "access plus 1 year"
          
              # CSS - Cache 1 an (elimine main.css et critical.css)
              ExpiresByType text/css "access plus 1 year"
          
              # JS - Cache 1 an (elimine script.js)
              ExpiresByType application/javascript "access plus 1 year"
              ExpiresByType application/x-javascript "access plus 1 year"
          
              # SVG - Cache 1 an (elimine full_logo.svg et n_element.svg)
              ExpiresByType image/svg+xml "access plus 1 year"
          
              # IMAGES - Cache 1 an
              ExpiresByType image/png "access plus 1 year"
              ExpiresByType image/webp "access plus 1 year"
              ExpiresByType image/jpg "access plus 1 year"
              ExpiresByType image/jpeg "access plus 1 year"
          
              # HTML - Garde 1h (correct)
              ExpiresByType text/html "access plus 1 hour"
          </IfModule>
          
          <IfModule mod_headers.c>
              # POLICES - Headers immutables
              <FilesMatch "\.(woff2|woff|ttf|otf|eot)$">
                  Header set Cache-Control "public, max-age=31536000, immutable"
                  Header set Access-Control-Allow-Origin "*"
              </FilesMatch>
          
              # CSS - Headers immutables (main.css et critical.css)
              <FilesMatch "\.css$">
                  Header set Cache-Control "public, max-age=31536000, immutable"
              </FilesMatch>
          
              # JS - Headers immutables (script.js)
              <FilesMatch "\.js$">
                  Header set Cache-Control "public, max-age=31536000, immutable"
              </FilesMatch>
          
              # SVG - Headers immutables (logos)
              <FilesMatch "\.svg$">
                  Header set Cache-Control "public, max-age=31536000, immutable"
              </FilesMatch>
          
              # IMAGES
              <FilesMatch "\.(png|jpg|jpeg|webp|gif)$">
                  Header set Cache-Control "public, max-age=31536000, immutable"
              </FilesMatch>
          
              # HTML
              <FilesMatch "\.html$">
                  Header set Cache-Control "public, max-age=3600, must-revalidate"
              </FilesMatch>
          </IfModule>
          
          <IfModule mod_mime.c>
              AddType font/woff2 .woff2
              AddType font/woff .woff
              AddType application/font-woff2 .woff2
              AddType application/font-woff .woff
              AddType image/webp .webp
              AddType image/svg+xml .svg
          </IfModule>
          
          <IfModule mod_deflate.c>
              AddOutputFilterByType DEFLATE text/css
              AddOutputFilterByType DEFLATE application/javascript
              AddOutputFilterByType DEFLATE image/svg+xml
              AddOutputFilterByType DEFLATE text/html
              SetEnvIfNoCase Request_URI \.(woff|woff2|png|jpg|jpeg|webp)$ no-gzip
          </IfModule>
          FINAL_HTACCESS
          
          echo "‚úÖ .htaccess FINAL cr√©√© - Tous assets passent √† 1 an de cache"

      # ‚úÖ Validation sp√©cifique aux 32 KiB
      - name: Validate final cache optimization
        run: |
          echo "üîç Validation optimisation finale..."
          
          # V√©rifier que tous les types d'assets probl√©matiques ont 1 an de cache
          CHECKS=(
              "text/css.*1 year:CSS 1 an"
              "application/javascript.*1 year:JS 1 an" 
              "image/svg.*1 year:SVG 1 an"
              "font/woff2.*1 year:Polices 1 an"
              "max-age=31536000:Headers 1 an"
          )
          
          for check in "${CHECKS[@]}"; do
              pattern="${check%:*}"
              name="${check#*:}"
          
              if grep -q "$pattern" dist/.htaccess; then
                  echo "‚úÖ $name configur√©"
              else
                  echo "‚ùå $name manquant"
                  exit 1
              fi
          done
          
          echo "üéØ Optimisation finale valid√©e - 32 KiB √©limin√©s"

      - name: Deploy to Infomaniak via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /sites/valentingassend.com/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.DS_Store
            **/Thumbs.db
          security: strict
          timeout: 180000

      - name: Final optimization summary
        run: |
          echo ""
          echo "üéâ OPTIMISATION FINALE TERMIN√âE"
          echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
          echo "üåê Site: https://valentingassend.com"
          echo "üéØ Cache optimis√© pour TOUS les assets:"
          echo "   ‚Ä¢ Polices: 1h ‚Üí 1 an (main.woff2)"
          echo "   ‚Ä¢ CSS: 1h ‚Üí 1 an (main.css, critical.css)"
          echo "   ‚Ä¢ JS: 1h ‚Üí 1 an (script.js)"
          echo "   ‚Ä¢ SVG: 1h ‚Üí 1 an (logos)"
          echo ""
          echo "üìä Impact Lighthouse attendu:"
          echo "   ‚Ä¢ √âconomies: 32 KiB ‚Üí 0 KiB"
          echo "   ‚Ä¢ Cache TTL: 1h ‚Üí 365 days"
          echo "   ‚Ä¢ Score: 100/100 maintenu"
          echo ""
          echo "üß™ Test dans 10 minutes:"
          echo "curl -I https://valentingassend.com/css/main.css"
          echo "üëÄ Attendu: Cache-Control: public, max-age=31536000, immutable"