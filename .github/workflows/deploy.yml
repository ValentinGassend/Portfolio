# .github/workflows/deploy.yml - VERSION D'URGENCE (corrige erreur 500)
name: Deploy Emergency Fix

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  emergency-deploy:
    runs-on: ubuntu-latest

    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Fix permissions
        run: chmod +x deploy.js

      - name: Generate deployment
        run: npm run deploy

      # ✅ .htaccess MINIMAL ET SÛR (corrige erreur 500)
      - name: Create SAFE htaccess (emergency fix)
        run: |
          echo "🚨 Création .htaccess MINIMAL pour corriger erreur 500..."
          
          cat > dist/.htaccess << 'EMERGENCY_HTACCESS'
          # htaccess MINIMAL - Corrige erreur 500 + garde cache polices
          # Compatible serveur Infomaniak Apache
          
          <IfModule mod_rewrite.c>
              RewriteEngine On
              RewriteCond %{REQUEST_FILENAME} !-f
              RewriteCond %{REQUEST_FILENAME} !-d
              RewriteRule . /index.html [L]
          </IfModule>
          
          <IfModule mod_expires.c>
              ExpiresActive On
              ExpiresByType font/woff2 "access plus 1 year"
              ExpiresByType font/woff "access plus 1 year"
              ExpiresByType application/font-woff2 "access plus 1 year"
              ExpiresByType application/font-woff "access plus 1 year"
              ExpiresByType text/css "access plus 1 year"
              ExpiresByType application/javascript "access plus 1 year"
              ExpiresByType image/png "access plus 1 year"
              ExpiresByType image/webp "access plus 1 year"
              ExpiresByType text/html "access plus 1 hour"
          </IfModule>
          
          <IfModule mod_headers.c>
              <FilesMatch "\.(woff2|woff)$">
                  Header set Cache-Control "public, max-age=31536000"
                  Header set Access-Control-Allow-Origin "*"
              </FilesMatch>
              <FilesMatch "\.(css|js)$">
                  Header set Cache-Control "public, max-age=31536000"
              </FilesMatch>
          </IfModule>
          
          <IfModule mod_mime.c>
              AddType font/woff2 .woff2
              AddType font/woff .woff
              AddType application/font-woff2 .woff2
              AddType application/font-woff .woff
          </IfModule>
          EMERGENCY_HTACCESS
          
          echo "✅ .htaccess minimal créé ($(wc -l < dist/.htaccess) lignes)"

      # ✅ Validation minimale
      - name: Validate emergency htaccess
        run: |
          echo "🔍 Validation .htaccess d'urgence..."
          
          if [ -f "dist/.htaccess" ]; then
              echo "✅ Fichier .htaccess présent"
          else
              echo "❌ Fichier .htaccess manquant"
              exit 1
          fi
          
          if grep -q "RewriteEngine On" dist/.htaccess; then
              echo "✅ RewriteEngine configuré"
          else
              echo "❌ RewriteEngine manquant"
              exit 1
          fi
          
          if grep -q "font/woff2.*1 year" dist/.htaccess; then
              echo "✅ Cache polices présent (corrige 245KB Lighthouse)"
          else
              echo "⚠️ Cache polices non détecté"
          fi

      - name: Deploy to Infomaniak via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: /sites/valentingassend.com/
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.DS_Store
            **/Thumbs.db
          security: strict
          timeout: 180000

      - name: Emergency deployment summary
        run: |
          echo ""
          echo "🚨 DÉPLOIEMENT D'URGENCE TERMINÉ"
          echo "═══════════════════════════════════"
          echo "🌐 Site: https://valentingassend.com"
          echo "🔧 .htaccess minimal déployé pour corriger erreur 500"
          echo "🎯 Cache polices maintenu pour Lighthouse (245KB)"
          echo ""
          echo "📋 Tests à effectuer:"
          echo "1. Vérifiez que le site se charge: https://valentingassend.com"
          echo "2. Testez une page: https://valentingassend.com/about"
          echo "3. Si OK, testez le cache polices:"
          echo "   curl -I https://valentingassend.com/font/BricolageGrotesque-Regular.woff2"
          echo ""
          echo "⚠️ Si l'erreur 500 persiste:"
          echo "1. Contactez le support Infomaniak"
          echo "2. Vérifiez que mod_rewrite et mod_expires sont activés"
          echo "3. Demandez les logs d'erreur Apache"